{"version":3,"sources":["components/AccountInfo.jsx","actions/userActions.jsx","components/BankAccounts.jsx","BankAccountsPage.jsx","App.js","components/Navbar.jsx","components/AddAccount.jsx","components/EditAccount.jsx","components/Signup.jsx","components/Login.jsx","Router.js","serviceWorker.js","reducers/AccountReducer.jsx","store/store.jsx","index.js"],"names":["mapDispatchToProps","deleteAccount","id","type","payload","connect","account_type","account_name","account_number","bank_name","bank_branch","className","to","onClick","state","accounts","bankAccounts","map","account","key","style","flexWrap","BankAccountsPage","props","Component","App","Navbar","role","aria-label","aria-expanded","data-target","aria-hidden","AddAccount","handleChange","e","preventDefault","setState","target","name","value","handleSubmit","addAccount","history","push","handleGoBack","onSubmit","this","placeholder","onChange","minLength","maxLength","Math","random","toString","EditAccount","editAccount","Signup","Login","Router","exact","path","component","Boolean","window","location","hostname","match","initialState","accountsReducer","action","savedAccounts","filter","Store","createStore","AccountReducer","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ecf418e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { deleteAccount } from \"../actions/userActions\";\r\n\r\nconst AccountInfo = ({\r\n  id,\r\n  account_type,\r\n  account_name,\r\n  account_number,\r\n  bank_name,\r\n  bank_branch,\r\n  deleteAccount\r\n}) => {\r\n  const removeAccount = () => {\r\n    deleteAccount(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <header className=\"card-header\">\r\n        <p className=\"card-header-title has-text-danger\">\r\n          {account_type} Account\r\n        </p>\r\n      </header>\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <table className=\"table is-striped is-hoverable\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Bank</th>\r\n                <td>{bank_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Branch</th>\r\n                <td>{bank_branch}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Account name</th>\r\n                <td>{account_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Account number</th>\r\n                <td>{account_number}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <footer className=\"card-footer\">\r\n        <Link to={`/edit-account/${id}`} className=\"card-footer-item\">\r\n          Edit\r\n        </Link>\r\n        <a onClick={removeAccount} className=\"card-footer-item\">\r\n          Delete\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapDispatchToProps= {\r\n  deleteAccount : deleteAccount \r\n}\r\n\r\nexport default connect (null, mapDispatchToProps) (AccountInfo);\r\n\r\n","export const ADD_ACCOUNT = \"ADD_ACCOUNT\"\r\nexport const DELETE_ACCOUNT = \"deleteAccount\"\r\nexport const EDIT_ACCOUNT = \"editAccountAction\"\r\n\r\n\r\nexport const addAccount =(account)=> {\r\n    account.id = Math.random().toString()\r\n    return {\r\n        type: \"ADD_ACCOUNT\",\r\n        payload: account\r\n    }\r\n\r\n}\r\n\r\nexport const deleteAccount =(id) => {\r\n    return {\r\n        type: DELETE_ACCOUNT,\r\n        payload: id\r\n    }\r\n}\r\nexport const updatedAccount = (editAccount)=> {\r\n       return {\r\n        type: EDIT_ACCOUNT,\r\n        payload: editAccount\r\n      \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AccountInfo from \"./AccountInfo\"\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst BankAccounts = ({ accounts, deleteAccount }) => {\r\n  const bankAccounts = accounts.map((account) => {\r\n    return (\r\n      <div className=\"column is-4\" key={account.id}>\r\n        <AccountInfo\r\n          id={account.id}\r\n          account_type={account.account_type}\r\n          account_name={account.account_name}\r\n          account_number={account.account_number}\r\n          bank_name={account.bank_name}\r\n          bank_branch={account.bank_branch}\r\n          deleteAccount={deleteAccount}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  return (\r\n    <div className=\"container bank-accounts-container\">\r\n      <div className=\"columns\" style={{ flexWrap: \"wrap\" }}>\r\n        {bankAccounts}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps=(state)=> { \r\n  \r\n  return {\r\n     accounts: state.accounts\r\n \r\n  }\r\n  \r\n}\r\nexport default connect(mapStateToProps)(BankAccounts);\r\n\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport BankAccounts from './components/BankAccounts';\r\nclass BankAccountsPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        accounts:[{\r\n            account_name: \"robert\",\r\n            account_number: \"012255335\",\r\n            account_type: \"savings\",\r\n            bank_name: \"absa\",\r\n            bank_branch: \"Accra\",\r\n        },\r\n        {\r\n            account_name: \"Mantse-GBONYO\",\r\n            account_number: \"012225879\",\r\n            account_type: \"current\",\r\n            bank_name: \"GCB\",\r\n            bank_branch: \"Accra\",\r\n        }]\r\n        \r\n    }\r\n    }\r\n    render () {\r\n        return (\r\n        <div>\r\n            <BankAccounts />\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default BankAccountsPage;\r\n","import React from 'react';\r\n// import bulma from 'bulma';\r\nimport BankAccountsPage from './BankAccountsPage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BankAccountsPage  />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav\r\n      className=\"navbar is-light\"\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <NavLink className=\"navbar-item\" to=\"/\">\r\n            <strong>ACCOUNT MANAGER</strong>\r\n          </NavLink>\r\n          <a\r\n            role=\"button\"\r\n            className=\"navbar-burger burger\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbarBasicExample\"\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n            <NavLink className=\"navbar-item\" to=\"/add-account\">\r\n              Add account\r\n            </NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/\">\r\n              See accounts\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <NavLink className=\"button is-info\" to=\"/signup\">\r\n                <strong>Sign up</strong>\r\n              </NavLink>\r\n              <NavLink className=\"button is-light\" to=\"/login\">\r\n                Log in\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addAccount } from \"../actions/userActions\";\r\n\r\n\r\nclass AddAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account_name: \"\",\r\n      account_number: \"\",\r\n      account_type: \"\",\r\n      bank_name: \"\",\r\n      bank_branch: \"\",\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addAccount(this.state);\r\n    this.setState({\r\n      account_name: \"\",\r\n      account_number: \"\",\r\n      account_type: \"savings\",\r\n      bank_name: \"\",\r\n      bank_branch: \"\"\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleGoBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container add-account-container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-6 is-offset-3\">\r\n            <h4 className=\"has-text-centered is-size-4\">ADD A NEW ACCOUNT</h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Bank name</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter bank name e.g. UniBank\"\r\n                    name=\"bank_name\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.bank_name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Bank branch</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter bank branch e.g. Accra main\"\r\n                    name=\"bank_branch\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.bank_branch}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account name</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter account name e.g. Kwame Lewis\"\r\n                    name=\"account_name\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.account_name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account number</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    minLength={12}\r\n                    maxLength={12}\r\n                    placeholder=\"Enter account number e.g. 123456789102\"\r\n                    name=\"account_number\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.account_number}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account type</label>\r\n                <div className=\"control\">\r\n                  <div className=\"select\">\r\n                    <select\r\n                      name=\"account_type\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.account_type}\r\n                    >\r\n                      <option value=\"Savings\">Select account type</option>\r\n                      <option value=\"Savings\">Savings</option>\r\n                      <option value=\"Current\">Current</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"field is-grouped\">\r\n                <div className=\"control\">\r\n                  <button\r\n                    onClick={this.handleSubmit}\r\n                    type=\"submit\"\r\n                    className=\"button is-link\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <button\r\n                    onClick={this.handleGoBack}\r\n                    className=\"button is-link is-light\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n  addAccount: addAccount\r\n\r\n}\r\nexport default connect (null, mapDispatchToProps)(AddAccount);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { updatedAccount } from \"../actions/userActions\";\r\n\r\nclass EditAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account_name: props.account_name,\r\n      account_number: props.account_name,\r\n      account_type: props.account_type,\r\n      bank_name: props.bank_name,\r\n      bank_branch: props.bank_branch,\r\n      id:props.id\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.editAccount(this.props.id, this.state);\r\n    this.setState({\r\n      account_name: \"\",\r\n      account_number: \"\",\r\n      account_type: \"\",\r\n      bank_name: \"\",\r\n      bank_branch: \"\",\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleGoBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container add-account-container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-6 is-offset-3\">\r\n            <h4 className=\"has-text-centered is-size-4\">\r\n              UPDATE ACCOUNT INFORMATION\r\n            </h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Bank name</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter bank name e.g. UniBank\"\r\n                    name=\"bank_name\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.bank_name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Bank branch</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter bank branch e.g. Accra main\"\r\n                    name=\"bank_branch\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.bank_branch}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account name</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter account name e.g. Kwame Lewis\"\r\n                    name=\"account_name\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.account_name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account number</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    minLength={12}\r\n                    maxLength={12}\r\n                    placeholder=\"Enter account number e.g. 123456789102\"\r\n                    name=\"account_number\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.account_number}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Account type</label>\r\n                <div className=\"control\">\r\n                  <div className=\"select\">\r\n                    <select\r\n                      name=\"account_type\"\r\n                      onChange={this.handleChange}\r\n                      value={this.props.account_type}\r\n                    >\r\n                      <option value=\"Savings\">Select account type</option>\r\n                      <option value=\"Savings\">Savings</option>\r\n                      <option value=\"Current\">Current</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"field is-grouped\">\r\n                <div className=\"control\">\r\n                  <button\r\n                    onClick={this.handleSubmit}\r\n                    type=\"submit\"\r\n                    className=\"button is-danger\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <button\r\n                    onClick={this.handleGoBack}\r\n                    className=\"button is-danger is-light\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n const mapDispatchToProps = {\r\n   \r\n  editAccount:updatedAccount,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (EditAccount);\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<h1>Signup</h1>)\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<h1>Login</h1>)\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport Navbar from './components/Navbar';\r\nimport AddAccount from './components/AddAccount';\r\nimport EditAccount from './components/EditAccount';\r\nimport Signup from './components/Signup';\r\nimport Login from './components/Login';\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={App} />\r\n                <Route path=\"/add-account\" component={AddAccount} />\r\n                <Route path=\"/edit-account/:id\" component={EditAccount} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/login\" component={Login} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ADD_ACCOUNT, DELETE_ACCOUNT, EDIT_ACCOUNT } from \"../actions/userActions\";\r\n\r\n\r\nconst initialState = {\r\n  accounts: [{\r\n    account_name: \"robert\",\r\n    account_number: \"012255335\",\r\n    account_type: \"savings\",\r\n    bank_name: \"absa\",\r\n    bank_branch: \"Accra\",\r\n    id: \"12536\",\r\n  },\r\n  {\r\n    account_name: \"benjamin\",\r\n    account_number: \"211125777\",\r\n    account_type: \"current\",\r\n    bank_name: \"absa\",\r\n    bank_branch: \"tema\",\r\n    id: \"15689\",\r\n  }\r\n],\r\n};\r\n\r\nconst accountsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ACCOUNT:\r\n      return { ...state.accounts, accounts: [...state.accounts, action.payload] };\r\n    case DELETE_ACCOUNT:\r\n      const savedAccounts = state.accounts.filter((account) => {\r\n        return account.id !== action.payload;\r\n      });\r\n        return{...state, accounts: savedAccounts };\r\n    case EDIT_ACCOUNT:\r\n      return {...state, accounts: state.accounts.map((account) =>\r\n        account === action.payload ? action.payload : account\r\n      )}\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default accountsReducer;","import {createStore} from \"redux\"\r\nimport AccountReducer from \"../reducers/AccountReducer\"\r\n\r\nconst Store = createStore(AccountReducer)\r\n\r\nexport default Store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Router from \"./Router\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\"\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <React.StrictMode>\r\n    <Router />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n   document.getElementById(\"root\")\r\n   );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}